{"version":3,"sources":["../../src/routing/customer-router.js"],"names":["CustomerRouter","constructor","router","express","Router","service","CustomerService","initializeRouting","get","request","response","customers","getCustomers","status","HttpConstants","OK","send","error","console","SERVER_ERROR","customerId","params","id","BAD_REQUEST","filteredCustomer","getCustomerById","parseInt","NOT_FOUND"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;AAEA,MAAMA,cAAN,CAAqB;AACjBC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAcC,kBAAQC,MAAR,EAAd;AACA,SAAKC,OAAL,GAAe,IAAIC,gCAAJ,EAAf;AAEA,SAAKC,iBAAL;AACH;;AAEDA,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,MAAL,CAAYM,GAAZ,CAAgB,GAAhB,EAAqB,OAAOC,OAAP,EAAgBC,QAAhB,KAA6B;AAC9C,UAAI;AACA,cAAMC,SAAS,GAAG,MAAM,KAAKN,OAAL,CAAaO,YAAb,EAAxB;AAEAF,QAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAcC,EAA9B,EAAkCC,IAAlC,CAAuCL,SAAvC;AACH,OAJD,CAIE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEAP,QAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAcK,YAA9B,EAA4CH,IAA5C,CAAiDC,KAAjD;AACH;AACJ,KAVD;AAYA,SAAKf,MAAL,CAAYM,GAAZ,CAAgB,aAAhB,EAA+B,OAAOC,OAAP,EAAgBC,QAAhB,KAA6B;AACxD,UAAI;AACA,cAAMU,UAAU,GAAGX,OAAO,CAACY,MAAR,CAAeC,EAAlC;;AAEA,YAAI,CAACF,UAAL,EAAiB;AACbV,UAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAcS,WAA9B;AAEA;AACH;;AAED,cAAMC,gBAAgB,GAClB,MAAM,KAAKnB,OAAL,CAAaoB,eAAb,CAA6BC,QAAQ,CAACN,UAAD,CAArC,CADV;;AAGA,YAAI,CAACI,gBAAL,EAAuB;AACnBd,UAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAca,SAA9B;AAEA;AACH;;AAEDjB,QAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAcC,EAA9B,EAAkCC,IAAlC,CAAuCQ,gBAAvC;AACH,OAnBD,CAmBE,OAAOP,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEAP,QAAAA,QAAQ,CAACG,MAAT,CAAgBC,yBAAcK,YAA9B,EAA4CH,IAA5C,CAAiDC,KAAjD;AACH;AACJ,KAzBD;AA0BH;;AAED,MAAIb,MAAJ,GAAa;AACT,WAAO,KAAKF,MAAZ;AACH;;AAnDgB;;QAuDjBF,c,GAAAA,c","sourcesContent":["import express from 'express';\r\nimport { CustomerService } from '../services/customer-service';\r\nimport { HttpConstants } from '../constants';\r\n\r\nclass CustomerRouter {\r\n    constructor() {\r\n        this.router = express.Router();\r\n        this.service = new CustomerService();\r\n\r\n        this.initializeRouting();\r\n    }\r\n\r\n    initializeRouting() {\r\n        this.router.get('/', async (request, response) => {\r\n            try {\r\n                const customers = await this.service.getCustomers();\r\n\r\n                response.status(HttpConstants.OK).send(customers);\r\n            } catch (error) {\r\n                console.error(error);\r\n\r\n                response.status(HttpConstants.SERVER_ERROR).send(error);\r\n            }\r\n        });\r\n\r\n        this.router.get('/detail/:id', async (request, response) => {\r\n            try {\r\n                const customerId = request.params.id;\r\n\r\n                if (!customerId) {\r\n                    response.status(HttpConstants.BAD_REQUEST);\r\n\r\n                    return;\r\n                }\r\n\r\n                const filteredCustomer =\r\n                    await this.service.getCustomerById(parseInt(customerId));\r\n\r\n                if (!filteredCustomer) {\r\n                    response.status(HttpConstants.NOT_FOUND);\r\n\r\n                    return;\r\n                }\r\n\r\n                response.status(HttpConstants.OK).send(filteredCustomer);\r\n            } catch (error) {\r\n                console.error(error);\r\n\r\n                response.status(HttpConstants.SERVER_ERROR).send(error);\r\n            }\r\n        });\r\n    }\r\n\r\n    get Router() {\r\n        return this.router;\r\n    }\r\n}\r\n\r\nexport {\r\n    CustomerRouter\r\n}"],"file":"customer-router.js"}